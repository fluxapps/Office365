<?php

namespace srag\Plugins\M365File\Utils;

use srag\Plugins\M365File\Repository;
use srag\Plugins\M365File\Config\Repository as ConfigRepository;
use srag\Plugins\M365File\M365\RESTClient;
use srag\Plugins\M365File\M365\OAuth2Service;
use srag\Plugins\M365File\M365\OAuth2Client;
use srag\Plugins\M365File\Model\APIToken\APITokenRepository as APITokenRepository;
use ILIAS\DI\LoggingServices;
use ilLogger;
use Monolog\Logger;

/**
 * Trait M365FileTrait
 *
 * Generated by SrPluginGenerator v2.8.1
 *
 * @package srag\Plugins\M365File\Utils
 *
 * @author studer + raimann ag <support@studer-raimann.ch>
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
trait M365FileTrait
{

    /**
     * @return Repository
     */
    protected static function m365File() : Repository
    {
        return Repository::getInstance();
    }

    protected static function config() : ConfigRepository
    {
        return ConfigRepository::getInstance();
    }

    protected static function restClient() : RESTClient
    {
        return new RESTClient(
            new OAuth2Service(
                new OAuth2Client(),
                new APITokenRepository()
            )
        );
    }

    protected static function log() : Logger
    {
        global $DIC;
        return $DIC->logger()->root()->getLogger()->withName('M365File');
    }
}
